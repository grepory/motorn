env JWE_KEY_FILE;

worker_processes 1;

events { worker_connections 1024; }

http {
  # lua_ssl_trusted_certificate "root-certs.pem";
  # lua_ssl_verify_depth 2;
  lua_package_path "$prefix/lualib/?.lua;;";

  lua_shared_dict locks 1M;
  lua_shared_dict cache 10M;

  # see https://github.com/openresty/lua-resty-core
  init_by_lua '
    require "resty.core"
  ';

  index index.html index.htm;
 
  include mime.types;

  gzip              on;
  gzip_comp_level    5;
  gzip_http_version 1.1;
  gzip_proxied      any;
  gzip_min_length   500;
  gzip_disable      "MSIE [1-6]\.";
  gzip_types        text/plain
                    text/xml
                    text/css
                    text/comma-separated-values
                    text/javascript
                    application/x-javascript
                    application/atom+xml
                    application/javascript
                    application/json
                    application/rss+xml
                    application/vnd.ms-fontobject
                    application/x-font-ttf
                    application/x-web-app-manifest+json
                    application/xhtml+xml
                    application/xml
                    font/opentype
                    image/svg+xml
                    image/x-icon
                    text/x-component;
  
  default_type application/octet-stream;

  log_format main '$remote_addr - $remote_user [$time_iso8601] $status '
    '"$request" $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';
  log_format short '$status';

  access_log /dev/stdout short;
  sendfile on;
  tcp_nopush on;
  server_names_hash_bucket_size 128;

  server {
    listen 80;
    root html;
    set $template_root templates;
    default_type text/html;

    location / {
      try_files $uri $uri/ $uri.html =404;
    }

    location /debug {
      content_by_lua '
        local template = require "resty.template"
        local jose = require "jose"
        local user = jose.auth_by_header()
        template.cache = {}
        template.caching(false)
        template.render("debug.html", { 
          title = "Opsee debug",
          headers = ngx.req.get_headers(),
          token = user.token,
          cek = user.cek,
          plaintext = user.plaintext
        })
      ';
    }
  }
}
